/* Generated by Yosys 0.10+1 (git sha1 UNKNOWN, gcc 11.2.1 -O2 -fexceptions -fstack-protector-strong -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fPIC -Os) */

(* dynports =  1  *)
(* src = "count_zeros.sv:1.1-29.10" *)
module count_zeros(i_a, i_b, o_zeros, o_carry);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  (* src = "count_zeros.sv:8.30-8.33" *)
  input [3:0] i_a;
  (* src = "count_zeros.sv:8.35-8.38" *)
  input [3:0] i_b;
  (* src = "count_zeros.sv:10.20-10.27" *)
  output o_carry;
  (* src = "count_zeros.sv:9.31-9.38" *)
  output [3:0] o_zeros;
  (* src = "count_zeros.sv:12.23-12.28" *)
  wire [3:0] zeros;
  assign _000_ = ~i_b[1];
  assign _001_ = ~i_a[1];
  assign _002_ = ~(i_b[0] ^ i_a[0]);
  assign _003_ = _002_ ^ _001_;
  assign _004_ = _003_ ^ _000_;
  assign _005_ = ~(_004_ ^ i_a[2]);
  assign _006_ = ~(_005_ ^ i_b[2]);
  assign _007_ = ~(_006_ ^ i_a[3]);
  assign o_zeros[0] = _007_ ^ i_b[3];
  assign _008_ = i_b[0] | i_a[0];
  assign _009_ = i_b[0] & i_a[0];
  assign _010_ = i_a[1] ? _008_ : _009_;
  assign _011_ = ~(_010_ ^ _003_);
  assign _012_ = i_b[1] ? _010_ : _011_;
  assign _013_ = ~(_012_ ^ _004_);
  assign _014_ = i_a[2] ? _012_ : _013_;
  assign _015_ = ~(_014_ ^ _005_);
  assign _016_ = i_b[2] ? _014_ : _015_;
  assign _017_ = ~(_016_ ^ _006_);
  assign _018_ = i_a[3] ? _016_ : _017_;
  assign _019_ = _018_ ^ _007_;
  assign _020_ = _019_ & ~(i_b[3]);
  assign _021_ = i_b[3] & ~(_018_);
  assign o_zeros[1] = _021_ | _020_;
  assign _022_ = _008_ | _002_;
  assign _023_ = _001_ & ~(_022_);
  assign _024_ = _022_ | i_a[1];
  assign _025_ = _010_ | _003_;
  assign _026_ = _025_ ^ _024_;
  assign _027_ = i_b[1] ? _023_ : _026_;
  assign _028_ = _012_ | _004_;
  assign _029_ = ~(_028_ ^ _027_);
  assign _030_ = i_a[2] ? _027_ : _029_;
  assign _031_ = _014_ | _005_;
  assign _032_ = ~(_031_ ^ _030_);
  assign _033_ = i_b[2] ? _030_ : _032_;
  assign _034_ = _016_ | _006_;
  assign _035_ = ~(_034_ ^ _033_);
  assign _036_ = i_a[3] ? _033_ : _035_;
  assign _037_ = _018_ | _007_;
  assign _038_ = ~(_037_ ^ _036_);
  assign o_zeros[2] = i_b[3] ? _036_ : _038_;
  assign _039_ = _025_ | _024_;
  assign _040_ = _000_ & ~(_039_);
  assign _041_ = _027_ & ~(_028_);
  assign _042_ = _041_ ^ _040_;
  assign _043_ = i_a[2] ? _040_ : _042_;
  assign _044_ = _030_ & ~(_031_);
  assign _045_ = _044_ ^ _043_;
  assign _046_ = i_b[2] ? _043_ : _045_;
  assign _047_ = _033_ & ~(_034_);
  assign _048_ = _047_ ^ _046_;
  assign _049_ = i_a[3] ? _046_ : _048_;
  assign _050_ = _036_ & ~(_037_);
  assign _051_ = _050_ ^ _049_;
  assign o_carry = i_b[3] ? _049_ : _051_;
  assign o_zeros[3] = o_carry;
  assign zeros = { o_carry, o_zeros[2:0] };
endmodule
